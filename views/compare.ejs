<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player Comparison - Stat4Ballers</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/compare.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header class="header">
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <a href="/">
                        <h1 data-translate="Stat4Ballers">Stat4Ballers</h1>
                        <span class="tagline" data-translate="Football Statistics Hub">Football Statistics Hub</span>
                    </a>
                </div>
                <nav class="nav-links">
                    <a href="/league/ligue1" data-translate="Ligue 1">Ligue 1</a>
                    <a href="/league/premierleague" data-translate="Premier League">Premier League</a>
                    <a href="/league/laliga" data-translate="La Liga">La Liga</a>
                    <a href="/league/seriea" data-translate="Serie A">Serie A</a>
                    <a href="/league/bundesliga" data-translate="Bundesliga">Bundesliga</a>
                </nav>
            </div>
        </div>
    </header>

    <main class="main-content">
        <div class="container">
            <div class="comparison-header">
                <h1 data-translate="Player Comparison">Player Comparison</h1>
                <a href="/" class="btn-back" data-translate="← Back to Home">← Back to Home</a>
            </div>

            <% if (typeof players !== 'undefined' && players && players.length > 0) { %>
                <!-- Player Summary Section -->
                <div class="comparison-summary">
                    <h2 data-translate="Comparison Summary">Comparison Summary</h2>
                    <div class="summary-grid">
                        <%
                        players.forEach(player => {
                            const stats = player.statistics || {};
                            const highlights = [];

                            // Compare only General stats + Goals as requested
                            players.forEach(otherPlayer => {
                                if (otherPlayer.sportmonksId !== player.sportmonksId) {
                                    const otherStats = otherPlayer.statistics || {};

                                    // General stats comparison
                                    if (stats.rating > otherStats.rating && stats.rating > 0) {
                                        if (!highlights.find(h => h.includes('Rating'))) {
                                            highlights.push(`Rating: ${stats.rating?.toFixed(2)}`);
                                        }
                                    }
                                    if (stats.appearances > otherStats.appearances) {
                                        if (!highlights.find(h => h.includes('Appearances'))) {
                                            highlights.push(`Appearances: ${stats.appearances}`);
                                        }
                                    }
                                    if (stats.minutesPlayed > otherStats.minutesPlayed) {
                                        if (!highlights.find(h => h.includes('Minutes'))) {
                                            highlights.push(`Minutes: ${stats.minutesPlayed}`);
                                        }
                                    }
                                    if (stats.goals > otherStats.goals) {
                                        if (!highlights.find(h => h.includes('Goals'))) {
                                            highlights.push(`Goals: ${stats.goals}`);
                                        }
                                    }
                                    if (stats.assists > otherStats.assists) {
                                        if (!highlights.find(h => h.includes('Assists'))) {
                                            highlights.push(`Assists: ${stats.assists}`);
                                        }
                                    }
                                }
                            });
                        %>
                        <div class="player-summary-card">
                            <div class="player-summary-header">
                                <% if (player.imageUrl) { %>
                                <img src="<%= player.imageUrl %>" alt="<%= player.name %>" class="summary-player-img">
                                <% } %>
                                <div>
                                    <%
                                    const playerSlug = player.name.toLowerCase()
                                        .normalize('NFD')
                                        .replace(/[\u0300-\u036f]/g, '')
                                        .replace(/\s+/g, '-')
                                        .replace(/[^a-z0-9\-]/g, '');
                                    %>
                                    <h3>
                                        <a href="/player/<%= playerSlug %>" class="player-link">
                                            <%= player.displayName || player.name %>
                                        </a>
                                    </h3>
                                    <p>
                                        <span data-translate="<%= player.position %>"><%= player.position %></span> •
                                        <% if (player.team) { %>
                                            <a href="/team/<%= player.team.sportmonksId || player.teamId %>" class="team-link">
                                                <%= player.team.name %>
                                            </a>
                                        <% } %>
                                    </p>
                                </div>
                            </div>
                            <div class="player-highlights">
                                <% if (highlights.length > 0) { %>
                                    <p class="highlight-label" data-translate="Better than others in:">Better than others in:</p>
                                    <% highlights.slice(0, 3).forEach(highlight => { %>
                                        <span class="highlight-stat"><%= highlight %></span>
                                    <% }) %>
                                <% } else { %>
                                    <p class="highlight-label" data-translate="Balanced performance">Balanced performance</p>
                                <% } %>
                            </div>
                        </div>
                        <% }) %>
                    </div>
                </div>

                <!-- Detailed Statistics Table -->
                <div class="stats-container">
                    <h2 data-translate="Detailed Statistics">Detailed Statistics</h2>

                    <div class="stats-table-wrapper">
                        <table class="stats-comparison-table">
                            <thead>
                                <tr>
                                    <th class="stat-category-header" data-translate="Statistic">Statistic</th>
                                    <% players.forEach(player => { %>
                                    <%
                                    const playerSlugHeader = player.name.toLowerCase()
                                        .normalize('NFD')
                                        .replace(/[\u0300-\u036f]/g, '')
                                        .replace(/\s+/g, '-')
                                        .replace(/[^a-z0-9\-]/g, '');
                                    %>
                                    <th class="player-column-header">
                                        <a href="/player/<%= playerSlugHeader %>" class="player-header-link">
                                            <%= player.displayName || player.name %>
                                        </a>
                                    </th>
                                    <% }) %>
                                </tr>
                            </thead>
                            <tbody>
                                <%
                                // Use EXACT same stats as player pages
                                const statCategories = [
                                    {
                                        title: 'General Statistics',
                                        stats: [
                                            { key: 'rating', label: 'Rating', format: 'decimal' },
                                            { key: 'appearances', label: 'Appearances' },
                                            { key: 'minutesPlayed', label: 'Minutes played' },
                                            { key: 'captain', label: 'Captain' },
                                            { key: 'goals', label: 'Goals' },
                                            { key: 'assists', label: 'Assists' },
                                            { key: 'redCards', label: 'Red cards' }
                                        ]
                                    },
                                    {
                                        title: 'Offensive Creativity',
                                        stats: [
                                            { key: 'shotsTotal', label: 'Shots total' },
                                            { key: 'shotsOnTarget', label: 'Shots on target' },
                                            { key: 'penalties', label: 'Penalties' },
                                            { key: 'hitWoodwork', label: 'Hit woodwork' },
                                            { key: 'keyPasses', label: 'Key passes' },
                                            { key: 'bigChancesCreated', label: 'Big chances created' },
                                            { key: 'accurateCrosses', label: 'Accurate crosses' },
                                            { key: 'successfulDribbles', label: 'Successful dribbles' }
                                        ]
                                    },
                                    {
                                        title: 'Defensive Commitment',
                                        stats: [
                                            { key: 'yellowCards', label: 'Yellow cards' },
                                            { key: 'tackles', label: 'Tackles' },
                                            { key: 'ownGoals', label: 'Own goals' },
                                            { key: 'interceptions', label: 'Interceptions' },
                                            { key: 'duelsWon', label: 'Duels won' },
                                            { key: 'aerialsWon', label: 'Aerials won' },
                                            { key: 'dispossessed', label: 'Dispossessed' },
                                            { key: 'dribbledPast', label: 'Dribbled past' },
                                            { key: 'fouls', label: 'Fouls' },
                                            { key: 'foulsDrawn', label: 'Fouls drawn' },
                                            { key: 'errorLeadToGoal', label: 'Error lead to goal' }
                                        ]
                                    }
                                ];

                                // Add goalkeeper stats if any player is a goalkeeper
                                const hasGoalkeeper = players.some(p => p.position === 'Goalkeeper');
                                if (hasGoalkeeper) {
                                    statCategories.push({
                                        title: 'Goalkeeper Specific',
                                        stats: [
                                            { key: 'saves', label: 'Saves' },
                                            { key: 'savesInsideBox', label: 'Saves inside box' },
                                            { key: 'goalsConceded', label: 'Goals conceded' },
                                            { key: 'cleanSheets', label: 'Clean sheets' }
                                        ]
                                    });
                                }

                                statCategories.forEach(category => {
                                %>
                                    <tr class="category-row">
                                        <td colspan="<%= players.length + 1 %>" class="category-title" data-translate="<%= category.title %>">
                                            <%= category.title %>
                                        </td>
                                    </tr>
                                    <%
                                    category.stats.forEach(stat => {
                                        const values = players.map(p => {
                                            let value = p.statistics?.[stat.key] || 0;
                                            return value;
                                        });
                                        const maxValue = Math.max(...values);
                                        const minValue = Math.min(...values.filter(v => v > 0));
                                        const hasVariation = values.some(v => v !== values[0]);
                                    %>
                                    <tr class="stat-row">
                                        <td class="stat-label" data-translate="<%= stat.label %>"><%= stat.label %></td>
                                        <% players.forEach((player, idx) => {
                                            let value = values[idx];
                                            let className = '';

                                            // Highlight best/worst values
                                            if (hasVariation && value > 0 && players.length > 1) {
                                                // For negative stats, lower is better
                                                const negativeStats = ['yellowCards', 'redCards', 'fouls', 'dispossessed', 'dribbledPast', 'ownGoals', 'errorLeadToGoal', 'goalsConceded'];

                                                if (negativeStats.includes(stat.key)) {
                                                    if (value === minValue) className = 'best-value';
                                                    else if (value === maxValue) className = 'worst-value';
                                                } else {
                                                    if (value === maxValue) className = 'best-value';
                                                    else if (value === minValue && value > 0) className = 'worst-value';
                                                }
                                            }

                                            // Format display value
                                            let displayValue = value;
                                            if (stat.format === 'decimal' && value > 0) {
                                                displayValue = value.toFixed(2);
                                            } else {
                                                displayValue = Math.floor(value);
                                            }
                                        %>
                                        <td class="stat-value <%= className %>">
                                            <%= displayValue || '-' %>
                                        </td>
                                        <% }) %>
                                    </tr>
                                    <% }) %>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            <% } else { %>
                <div class="no-players">
                    <h2 data-translate="No players selected">No players selected</h2>
                    <p data-translate="Please select at least 2 players from the home page to compare their statistics.">Please select at least 2 players from the home page to compare their statistics.</p>
                    <a href="/" class="btn-primary" data-translate="Go to Home">Go to Home</a>
                </div>
            <% } %>
        </div>
    </main>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <p data-translate="© 2025 Stat4Ballers. Powered by SportMonks API.">&copy; 2025 Stat4Ballers. Powered by SportMonks API.</p>
            </div>
        </div>
    </footer>
    <script src="/js/translations.js"></script>
</body>
</html>