<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        .league-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 3rem 0;
            margin-bottom: 2rem;
        }
        .league-title {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }
        .season-selector {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }
        .season-btn {
            padding: 0.5rem 1rem;
            background: rgba(255,255,255,0.2);
            border: 2px solid white;
            color: white;
            border-radius: var(--radius);
            cursor: pointer;
            transition: all 0.3s;
        }
        .season-btn.active,
        .season-btn:hover {
            background: white;
            color: var(--primary-color);
        }
        .teams-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        .team-card {
            background: white;
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            color: inherit;
        }
        .team-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 40px rgba(0,0,0,0.15);
        }
        .team-card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 2rem;
            text-align: center;
        }
        .team-logo {
            width: 80px;
            height: 80px;
            object-fit: contain;
            background: white;
            border-radius: 50%;
            padding: 10px;
            margin: 0 auto;
        }
        .team-card-body {
            padding: 1.5rem;
            text-align: center;
        }
        .team-name {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--dark);
        }
        .team-info {
            color: var(--gray);
            font-size: 0.875rem;
        }
        .position {
            font-weight: 700;
            color: var(--primary-color);
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
        }
        .stat-title {
            color: var(--gray);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }
        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
        }
        .top-performers {
            background: rgba(255,255,255,0.1);
            border-radius: var(--radius);
            padding: 1.5rem;
            margin-top: 2rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
        }
        .performer-section {
            text-align: center;
        }
        .performer-title {
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        .performer-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        .performer-item {
            background: rgba(255,255,255,0.2);
            padding: 0.75rem;
            border-radius: var(--radius);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            text-decoration: none;
            color: white;
            transition: all 0.3s;
        }
        .performer-item:hover {
            background: rgba(255,255,255,0.3);
            transform: translateX(5px);
        }
        .performer-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            background: white;
        }
        .performer-info {
            flex: 1;
            text-align: left;
        }
        .performer-name {
            font-weight: 600;
            font-size: 0.9rem;
        }
        .performer-team {
            font-size: 0.8rem;
            opacity: 0.8;
        }
        .performer-stat {
            font-size: 1.2rem;
            font-weight: 700;
            color: #FFD700;
        }
        @media (max-width: 768px) {
            .top-performers {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <a href="/" style="text-decoration: none; color: inherit;">
                        <h1 data-translate="Stat4Ballers">Stat4Ballers</h1>
                        <span class="tagline" data-translate="Football Statistics Hub">Football Statistics Hub</span>
                    </a>
                </div>
                <nav class="nav-links">
                    <a href="/league/ligue1" data-translate="Ligue 1">Ligue 1</a>
                    <a href="/league/premierleague" data-translate="Premier League">Premier League</a>
                    <a href="/league/laliga" data-translate="La Liga">La Liga</a>
                    <a href="/league/seriea" data-translate="Serie A">Serie A</a>
                    <a href="/league/bundesliga" data-translate="Bundesliga">Bundesliga</a>
                </nav>
            </div>
        </div>
    </header>

    <div class="league-header">
        <div class="container">
            <%
                let leagueTitle = '';
                switch(leagueId) {
                    case 'ligue1': leagueTitle = 'Ligue 1'; break;
                    case 'premierleague': leagueTitle = 'Premier League'; break;
                    case 'laliga': leagueTitle = 'La Liga'; break;
                    case 'seriea': leagueTitle = 'Serie A'; break;
                    case 'bundesliga': leagueTitle = 'Bundesliga'; break;
                    default: leagueTitle = leagueId.charAt(0).toUpperCase() + leagueId.slice(1);
                }
            %>
            <div style="display: flex; align-items: center; gap: 2rem;">
                <img src="/images/leagues/<%= leagueId %>.svg" alt="<%= leagueTitle %>" style="width: 80px; height: 80px;">
                <h1 class="league-title">
                    <%= leagueTitle %>
                </h1>
            </div>

            <!-- Top Performers Section -->
            <div class="top-performers" id="top-performers" style="display: none;">
                <div class="performer-section">
                    <div class="performer-title">
                        âš½ Top Scorers
                    </div>
                    <div class="performer-list" id="top-scorers-list">
                        <!-- Top scorers will be loaded here -->
                    </div>
                </div>
                <div class="performer-section">
                    <div class="performer-title">
                        ðŸŽ¯ Top Assists
                    </div>
                    <div class="performer-list" id="top-assists-list">
                        <!-- Top assists will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <main class="container">
        <div class="teams-section">
            <h2 style="margin-bottom: 1rem;">Clubs - 2025/2026</h2>
            <div class="teams-grid" id="teams-grid">
                <!-- Team cards will be loaded here -->
                <div style="grid-column: 1/-1; text-align: center; padding: 3rem;">
                    <p>Chargement des Ã©quipes...</p>
                </div>
            </div>
        </div>
    </main>

    <script>
        const leagueId = '<%= leagueId %>';
        let currentSeason = '2025';

        // Load league data
        async function loadLeagueData(season) {
            try {
                // Fetch teams for this league
                const teamsResponse = await fetch(`/api/leagues/${leagueId}/teams?season=${season}`);
                const teamsData = await teamsResponse.json();

                // Fetch top performers
                const performersResponse = await fetch(`/api/leagues/${leagueId}/top-performers`);
                const performersData = await performersResponse.json();
                
                if (teamsData.success) {
                    // Handle both database teams and API teams
                    let teams = [];
                    if (Array.isArray(teamsData.data)) {
                        // From database
                        teams = teamsData.data;
                    } else if (teamsData.data.data && teamsData.data.data.teams) {
                        // From SportMonks API
                        teams = teamsData.data.data.teams.map(t => ({
                            sportmonksId: t.id,
                            name: t.name,
                            slug: t.name.toLowerCase().replace(/\s+/g, '-'),
                            logo: t.image_path,
                            shortName: t.short_code
                        }));
                    }
                    
                    if (teams.length > 0) {
                        updateTeamsTable(teams);
                    }
                }

                // Update top performers
                if (performersData.success) {
                    updateTopPerformers(performersData.data);
                }
            } catch (error) {
                console.error('Error loading league data:', error);
            }
        }

        // Update teams grid with cards
        function updateTeamsTable(teams) {
            const teamsGrid = document.getElementById('teams-grid');
            
            // Sort teams by name
            teams.sort((a, b) => a.name.localeCompare(b.name));
            
            // Create cards for each team
            teamsGrid.innerHTML = teams.map(team => `
                <a href="/team/${team.slug}" class="team-card">
                    <div class="team-card-header">
                        <img src="${team.logo || '/images/placeholder-team.png'}" 
                             alt="${team.name}" 
                             class="team-logo"
                             onerror="this.src='/images/placeholder-team.png'">
                    </div>
                    <div class="team-card-body">
                        <h3 class="team-name">${team.name}</h3>
                    </div>
                </a>
            `).join('');
        }

        // Update top performers section
        function updateTopPerformers(data) {
            const topPerformersSection = document.getElementById('top-performers');
            const topScorersList = document.getElementById('top-scorers-list');
            const topAssistsList = document.getElementById('top-assists-list');

            // Update top scorers
            if (data.topScorers && data.topScorers.length > 0) {
                topScorersList.innerHTML = data.topScorers.map(player => `
                    <a href="/player/${player.slug}" class="performer-item">
                        <img src="${player.image || '/images/placeholder-player.png'}"
                             alt="${player.name}"
                             class="performer-avatar"
                             onerror="this.src='/images/placeholder-player.png'">
                        <div class="performer-info">
                            <div class="performer-name">${player.name}</div>
                            <div class="performer-team">${player.team}</div>
                        </div>
                        <div class="performer-stat">${player.goals}</div>
                    </a>
                `).join('');
            } else {
                topScorersList.innerHTML = '<div style="text-align: center; padding: 1rem; opacity: 0.7;">No goals scored yet</div>';
            }

            // Update top assists
            if (data.topAssists && data.topAssists.length > 0) {
                topAssistsList.innerHTML = data.topAssists.map(player => `
                    <a href="/player/${player.slug}" class="performer-item">
                        <img src="${player.image || '/images/placeholder-player.png'}"
                             alt="${player.name}"
                             class="performer-avatar"
                             onerror="this.src='/images/placeholder-player.png'">
                        <div class="performer-info">
                            <div class="performer-name">${player.name}</div>
                            <div class="performer-team">${player.team}</div>
                        </div>
                        <div class="performer-stat">${player.assists}</div>
                    </a>
                `).join('');
            } else {
                topAssistsList.innerHTML = '<div style="text-align: center; padding: 1rem; opacity: 0.7;">No assists yet</div>';
            }

            // Show the top performers section
            topPerformersSection.style.display = 'grid';
        }

        // Season selector
        document.querySelectorAll('.season-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                document.querySelectorAll('.season-btn').forEach(b => b.classList.remove('active'));
                e.target.classList.add('active');
                currentSeason = e.target.dataset.season;
                loadLeagueData(currentSeason);
            });
        });

        // Load initial data
        loadLeagueData(currentSeason);
    </script>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <p data-translate="Â© 2025 Stat4Ballers. Powered by true soccer lovers. For the people, by the people.">&copy; 2025 Stat4Ballers. Powered by true soccer lovers. For the people, by the people.</p>
                <div class="footer-links">
                    <a href="/about" data-translate="About">About</a>
                </div>
                <div class="language-selector">
                    <button class="lang-btn active" data-lang="en">ðŸ‡¬ðŸ‡§</button>
                    <button class="lang-btn" data-lang="fr">ðŸ‡«ðŸ‡·</button>
                    <button class="lang-btn" data-lang="es">ðŸ‡ªðŸ‡¸</button>
                    <button class="lang-btn" data-lang="pt">ðŸ‡µðŸ‡¹</button>
                </div>
            </div>
        </div>
    </footer>

    <script src="/js/translations.js"></script>
    <script src="/js/main.js"></script>
</body>
</html>